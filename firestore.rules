rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - allow read/write for all users (no auth required)
    match /users/{userId} {
      allow read, write: if true;
      allow create: if validateUserData(request.resource.data);
      
      // User's periods subcollection
      match /periods/{periodId} {
        allow read, write: if true;
        allow create: if validatePeriodData(request.resource.data);
      }
      
      // User's moods subcollection (for future mood tracking)
      match /moods/{moodId} {
        allow read, write: if true;
        allow create: if validateMoodData(request.resource.data);
      }
    }
    
    // Config collection - read-only for all users
    match /config/{configId} {
      allow read: if true;
      allow write: if false; // Only admins can write (handle via Firebase Admin SDK)
    }
    
    // Feed items collection - read-only for all users
    match /feedItems/{feedId} {
      allow read: if true;
      allow write: if false; // Only server can write feed items
    }
    
    // Helper functions for data validation
    function validateUserData(data) {
      return data.keys().hasAll(['name', 'age', 'country', 'cycleLength', 'periodLength', 'createdAt']) &&
             data.name is string &&
             data.name.size() > 0 &&
             data.name.size() <= 100 &&
             data.age is number &&
             data.age >= 10 &&
             data.age <= 100 &&
             data.country is string &&
             data.country.size() > 0 &&
             data.cycleLength is number &&
             data.cycleLength >= 21 &&
             data.cycleLength <= 60 &&
             data.periodLength is number &&
             data.periodLength >= 1 &&
             data.periodLength <= 10 &&
             data.createdAt is string;
    }
    
    function validatePeriodData(data) {
      return data.keys().hasAll(['start']) &&
             data.start is string &&
             data.start.size() > 0;
    }
    
    function validateMoodData(data) {
      return data.keys().hasAll(['mood', 'date']) &&
             data.mood is string &&
             data.mood.size() > 0 &&
             data.date is string &&
             data.date.size() > 0;
    }
  }
}
